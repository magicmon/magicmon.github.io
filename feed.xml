<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>magicmon</title>
  <subtitle>magicmon&#39;s blog</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://magicmon.github.io/"/>
  <updated>2017-05-11T04:19:46.000Z</updated>
  <id>https://magicmon.github.io/</id>
  
  <author>
    <name>Taewoo Kang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Implement APNs with GCM</title>
    <link href="https://magicmon.github.io/2017/05/02/Implement-APNs-with-GCM/"/>
    <id>https://magicmon.github.io/2017/05/02/Implement-APNs-with-GCM/</id>
    <published>2017-05-02T03:02:04.000Z</published>
    <updated>2017-05-11T04:19:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GCM"><a href="#GCM" class="headerlink" title="GCM"></a>GCM</h2><p>푸쉬 기능을 모두 GCM으로 사용하고 싶을 경우가 있다.<br>(아마 운영상의 이유로 푸쉬 기능을 모두 GCM으로 보내는 경우인데)<br>구글에서 해당 서비스를 제공하고 있다.<br><a href="https://developers.google.com/cloud-messaging" target="_blank" rel="external">https://developers.google.com/cloud-messaging</a><br>해당 페이지에 접속해 가이드대로 따라하면 오케이</p>
<h2 id="가이드-문서"><a href="#가이드-문서" class="headerlink" title="가이드 문서"></a>가이드 문서</h2><p><a href="http://devlecture.tistory.com/entry/팁05-GCM으로-Android-iOS-둘다-push-notification-을-할-수-있다" target="_blank" rel="external">[팁5] GCM으로 Android, iOS 둘다 push notification 을 할 수 있다.</a></p>
<h3 id="주의"><a href="#주의" class="headerlink" title="주의"></a>주의</h3><p>아래 설정에서 <code>sandbox</code>용도인지 <code>product</code>용도 인지 구분해줘야 배포시 문제가 생기지 않는다</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Start the GGLInstanceID shared instance with that config and request a registration</span></div><div class="line"><span class="comment">// token to enable reception of notifications</span></div><div class="line"></div><div class="line"><span class="type">GGLInstanceID</span>.sharedInstance().startWithConfig(instanceIDConfig)</div><div class="line"></div><div class="line">#<span class="keyword">if</span> <span class="type">DEBUG</span></div><div class="line">registrationOptions = [kGGLInstanceIDRegisterAPNSOption:deviceToken,</div><div class="line">                       kGGLInstanceIDAPNSServerTypeSandboxOption:<span class="literal">true</span>]</div><div class="line">#<span class="keyword">else</span></div><div class="line">registrationOptions = [kGGLInstanceIDRegisterAPNSOption:deviceToken,</div><div class="line">                       kGGLInstanceIDAPNSServerTypeSandboxOption:<span class="literal">false</span>]</div><div class="line">#endif</div></pre></td></tr></table></figure>
<h2 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h2><p>실제 전송 테스트는<br>chrome에서 제공하는 postman을 통해 할 수 있다<br><a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop" target="_blank" rel="external">Postman - REST Client shortcut</a></p>
<p>아래와 같은 양식으로 테스트 진행<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server</div><div class="line">https://android.googleapis.com/gcm/send</div><div class="line"></div><div class="line">type</div><div class="line">POST</div><div class="line"></div><div class="line">header</div><div class="line">Content-Type      application/json</div><div class="line">Authorization      key=&lt;SERVER_API_KEY&gt;</div></pre></td></tr></table></figure></p>
<p>body<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"to"</span>: <span class="string">"neZCjHSz01I:APA91bEZ7V-H0gxbkvtrQ2q4Rg..."</span>,</div><div class="line">  <span class="attr">"priority"</span>: <span class="string">"high"</span>,</div><div class="line">  <span class="attr">"notification"</span>: &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"테스트 앱"</span>,</div><div class="line">    <span class="attr">"body"</span>: <span class="string">"데이터 테스트"</span>,</div><div class="line">    <span class="attr">"sound"</span>: <span class="string">"default"</span>,</div><div class="line">    <span class="attr">"custom_data"</span>: &#123;</div><div class="line">      <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</div><div class="line">      <span class="attr">"key2"</span>: <span class="string">"value2"</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"data"</span>: &#123;</div><div class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</div><div class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="25573F475717566B10E5DA.png" alt=""></p>
<p>응답이 아래와 같은식으로 오면 성공<br>(success가 1로 찍힘)</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"multicast_id"</span>: <span class="number">4641604398078841000</span>,</div><div class="line">  <span class="attr">"success"</span>: <span class="number">1</span>,</div><div class="line">  <span class="attr">"failure"</span>: <span class="number">0</span>,</div><div class="line">  <span class="attr">"canonical_ids"</span>: <span class="number">0</span>,</div><div class="line">  <span class="attr">"results"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"message_id"</span>: <span class="string">"0:1461147253377743%5c9c215e5c9c215e"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>로그는 아래와 같이 AppDelegate.swift <code>didReceiveRemoteNotification()</code>에서 확인 가능<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  gcm.message_id: 0:1461149417155575%5c9c215e5c9c215e,</div><div class="line">  key1: value1,</div><div class="line">  gcm.notification.custom_data: &#123;</div><div class="line">    &quot;key1&quot;: &quot;value1&quot;,</div><div class="line">    &quot;key2&quot;: &quot;value2&quot;</div><div class="line">  &#125;,</div><div class="line">  key2: value2,</div><div class="line">  aps: &#123;</div><div class="line">    alert = &#123;</div><div class="line">    body = &quot;\Ub370\Uc774\Ud130 \Ud14c\Uc2a4\Ud2b8&quot;;</div><div class="line">    title = &quot;\Ud14c\Uc2a4\Ud2b8 \Uc571&quot;;</div><div class="line">  &#125;;</div><div class="line">  sound = default;</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GCM&quot;&gt;&lt;a href=&quot;#GCM&quot; class=&quot;headerlink&quot; title=&quot;GCM&quot;&gt;&lt;/a&gt;GCM&lt;/h2&gt;&lt;p&gt;푸쉬 기능을 모두 GCM으로 사용하고 싶을 경우가 있다.&lt;br&gt;(아마 운영상의 이유로 푸쉬 기능을 모두 GCM으로 보내
    
    </summary>
    
      <category term="iOS" scheme="https://magicmon.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://magicmon.github.io/tags/iOS/"/>
    
      <category term="APNs" scheme="https://magicmon.github.io/tags/APNs/"/>
    
      <category term="GCM" scheme="https://magicmon.github.io/tags/GCM/"/>
    
  </entry>
  
  <entry>
    <title>iOS command build script</title>
    <link href="https://magicmon.github.io/2017/05/02/iOS-command-build-script/"/>
    <id>https://magicmon.github.io/2017/05/02/iOS-command-build-script/</id>
    <published>2017-05-02T01:13:34.000Z</published>
    <updated>2017-05-02T03:02:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>스크립트를 통해 Xcode 프로젝트를 빌드하는 방법에 대해서 설명 드리려고 합니다.</p>
<h2 id="구성"><a href="#구성" class="headerlink" title="구성"></a>구성</h2><p>Xcode상에서 작성된 코드를 가끔 커맨드를 통해 빌드해야 할 경우가 생깁니다.<br>저와 같은 경우는 <a href="https://jenkins.io" target="_blank" rel="external">Jenkins</a>를 통해 자동배포 구성 시 Jenkins에서 자동으로 설정해주는 셋팅값 대신 스크립트로 제가 원하는 환경을 만들고 빌드하기 위해 주로 사용합니다.<br>그 이유는 Jenkins빌드셋팅이 생각보다 쉽지 않을 뿐더러 Xcode버전업 등으로 재 설정이 필요할 경우 일정기간 제대로 동작하지 않는 문제가 발생하기 때문입니다.<br>사실 Xcode7에서 마이너버전 업데이트 이후에 제대로 동작하지 않아 알아보던 중 구성하게 됐습니다.</p>
<p>아래 스크립트 구성 방식은 아래와 같습니다.</p>
<ol>
<li>Xcode빌드</li>
<li>ipa파일 추출</li>
<li><a href="https://fabric.io" target="_blank" rel="external">Fabric</a>을 통해 해당 ipa배포<br>3.1. 배포 시 커밋로그를 기반으로 릴리즈 노트 생성</li>
</ol>
<script src="//gist.github.com/6860b81df193c975c10ac5216f00697e.js"></script>
<blockquote>
<p><em>0000000 &lt; 이런식으로 돼 있는 곳은 해당 서버에 맞는 키를 발급받아 넣어주시면 됩니다.</em></p>
</blockquote>
<h2 id="커멘드-창-내-실행"><a href="#커멘드-창-내-실행" class="headerlink" title="커멘드 창 내 실행"></a>커멘드 창 내 실행</h2><p>커멘드 창에서 실행시는<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./build.sh <span class="string">"Test"</span> <span class="string">"TestTarget"</span> <span class="string">"Testers"</span></div></pre></td></tr></table></figure></p>
<p>이렇게 세개의 파라미터로 동작하고, 각 파라미터는</p>
<ul>
<li>첫번째 파라미터 : workspace 이름</li>
<li>두번째 파라미터 : 빌드하려는 타켓 이름</li>
<li>세번째 파라미터 : fabric 배포 시 배포 그룹 이름</li>
</ul>
<p>입니다.</p>
<blockquote>
<p><em>fabric 배포가 필요 없으시다면 스크립트에서 해당 설정 부분을 제거하시면 될 듯 합니다.</em></p>
</blockquote>
<h2 id="Jekins내-설정"><a href="#Jekins내-설정" class="headerlink" title="Jekins내 설정"></a>Jekins내 설정</h2><p>Jenkins내의 프로젝트 설정으로 가셔서<br>아래쪽에 보시면 Build항목이 있습니다.</p>
<p><code>Add build step</code> &gt; <code>Execute shell</code>을 클릭하여 추가한 후<br>해당 스크립트를 작성해주시면 됩니다.</p>
<p><img src="jenkins_config.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;스크립트를 통해 Xcode 프로젝트를 빌드하는 방법에 대해서 설명 드리려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;구성&quot;&gt;&lt;a href=&quot;#구성&quot; class=&quot;headerlink&quot; title=&quot;구성&quot;&gt;&lt;/a&gt;구성&lt;/h2&gt;&lt;p&gt;Xcode상에서 작성된 코드를
    
    </summary>
    
      <category term="OSX" scheme="https://magicmon.github.io/categories/OSX/"/>
    
    
      <category term="iOS" scheme="https://magicmon.github.io/tags/iOS/"/>
    
      <category term="Jenkins" scheme="https://magicmon.github.io/tags/Jenkins/"/>
    
      <category term="xcodebuild" scheme="https://magicmon.github.io/tags/xcodebuild/"/>
    
      <category term="buildscript" scheme="https://magicmon.github.io/tags/buildscript/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat+Jenkins+SonaQube for OSX</title>
    <link href="https://magicmon.github.io/2017/04/26/Tomcat-Jenkins-SonaQube/"/>
    <id>https://magicmon.github.io/2017/04/26/Tomcat-Jenkins-SonaQube/</id>
    <published>2017-04-26T07:23:29.000Z</published>
    <updated>2017-04-27T08:12:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>OSX 상에서 SonaQube에 Jeknins를 연동하여 SonaQube 코드품질 측정을 자동으로 하도록 설치하는 과정이다.<br>또한 Tomcat으로 SonarQube를 띄워 서버가 돌아가도록 하는 과정도 포함 하였다.</p>
<p>설치 순서는<br><a href="#mysql">mysql</a> &gt; <a href="#Sonar">SonaQube</a> &gt; <a href="#Jenkins">Jenkins</a>이다.</p>
<h3 id="주의"><a href="#주의" class="headerlink" title="주의"></a>주의</h3><p>각각의 패키지 설치는 <a href="https://brew.sh/index_ko.html" target="_blank" rel="external">Homebrew</a>를 통해 진행하였다.<br>혹시 아직 Homebrew가 설치 돼 있지 않으면, 해당 패키지를 설치 한 후, 아래 설치를 진행한다.</p>
<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>mysql 설치<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> brew install mysql</div><div class="line"><span class="meta">$</span> brew services start mysql</div></pre></td></tr></table></figure></p>
<p>처음 설치 했다면 root 암호 설정<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> mysqladmin -u root -p password root</div></pre></td></tr></table></figure></p>
<p>sonarQube 계정 설정을 위해 sql 실행<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> mysql -u root -p &lt; create_database.sql</div></pre></td></tr></table></figure></p>
<p>파일 &gt; <a href="https://drive.google.com/file/d/0Bw6yvzWgIR6BeHdQRFZLaXQ4akk/view?usp=sharing" target="_blank" rel="external">create_database.sql</a></p>
<h2 id="Sonar"><a href="#Sonar" class="headerlink" title="Sonar"></a>Sonar</h2><p>sonar 설치<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> brew install sonar</div><div class="line"><span class="meta">$</span> brew install sonar-runner</div></pre></td></tr></table></figure></p>
<p>sonar property 설정<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> vi /usr/local/Cellar/sonar/5.6/libexec/conf/sonar.properties</div></pre></td></tr></table></figure></p>
<p>수정부분<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># User credentials.</span></div><div class="line"><span class="comment"># Permissions to create tables, indices and triggers must be granted to JDBC user.</span></div><div class="line"><span class="comment"># The schema must be created first.</span></div><div class="line">sonar.jdbc.username=sonar</div><div class="line">sonar.jdbc.password=sonar</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#----- MySQL 5.6 or greater</span></div><div class="line"><span class="comment"># Only InnoDB storage engine is supported (not myISAM).</span></div><div class="line"><span class="comment"># Only the bundled driver is supported. It can not be changed.</span></div><div class="line">sonar.jdbc.url=<span class="symbol">jdbc:</span><span class="symbol">mysql:</span>/<span class="regexp">/localhost:3306/sonar</span>?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=<span class="literal">true</span>&amp;useConfigs=maxPerformance</div></pre></td></tr></table></figure></p>
<p>sonar 실행<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> brew services start sonar</div></pre></td></tr></table></figure></p>
<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><p>Jenkins 설치<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> brew install jenkins</div><div class="line"><span class="meta">$</span> brew services start jenkins</div></pre></td></tr></table></figure></p>
<h2 id="서비스-시작-확인"><a href="#서비스-시작-확인" class="headerlink" title="서비스 시작 확인"></a>서비스 시작 확인</h2><p>mysql, Sonar, Jenkins가 모두 설치 및 서비스가 실행됐는지 확인하기 위해 서비스를 확인<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> brew services list</div></pre></td></tr></table></figure></p>
<p>해당 서비스가 모두 실행중이라면 설치 완료!!<br><img src="273FA8405771F2584525A4.png" alt=""></p>
<p>만약 mysql이 실행이 안됐다면<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mysql.server start</div></pre></td></tr></table></figure></p>
<h2 id="참고사이트"><a href="#참고사이트" class="headerlink" title="참고사이트"></a>참고사이트</h2><ul>
<li><p>starting and stopping background services with homebrew<br><a href="https://robots.thoughtbot.com/starting-and-stopping-background-services-with-homebrew" target="_blank" rel="external">https://robots.thoughtbot.com/starting-and-stopping-background-services-with-homebrew</a></p>
</li>
<li><p>Install Jenkins<br><a href="http://dolphin.ivyro.net/file/tool_etc/homebrew_jenkins.html" target="_blank" rel="external">http://dolphin.ivyro.net/file/tool_etc/homebrew_jenkins.html</a></p>
</li>
</ul>
<ul>
<li><p>Install SonarQube<br><a href="http://zafercelaloglu.blogspot.kr/2014/07/how-to-setup-sonar-on-mac-part-1.html" target="_blank" rel="external">http://zafercelaloglu.blogspot.kr/2014/07/how-to-setup-sonar-on-mac-part-1.html</a><br>or<br><a href="http://www.sonarqube.org/downloads/" target="_blank" rel="external">http://www.sonarqube.org/downloads/</a></p>
</li>
<li><p>SoarQube Docs<br><a href="http://docs.sonarqube.org/" target="_blank" rel="external">http://docs.sonarqube.org/</a></p>
</li>
<li><p>Install MySql<br><a href="http://blog.joefallon.net/2013/10/install-mysql-on-mac-osx-using-homebrew/" target="_blank" rel="external">http://blog.joefallon.net/2013/10/install-mysql-on-mac-osx-using-homebrew/</a></p>
</li>
<li><p>Get Swift Plugin<br><a href="http://www.sonarsource.com/products/plugins/languages/swift/" target="_blank" rel="external">http://www.sonarsource.com/products/plugins/languages/swift/</a></p>
</li>
</ul>
<h2 id="if-Error"><a href="#if-Error" class="headerlink" title="if Error"></a>if Error</h2><p><a href="http://stackoverflow.com/questions/33843378/sonar-fails-to-connect-to-mysql-on-mac-ei-caption" target="_blank" rel="external">http://stackoverflow.com/questions/33843378/sonar-fails-to-connect-to-mysql-on-mac-ei-caption</a><br><a href="http://stackoverflow.com/questions/28988441/cant-acess-sonarqube-not-a-valid-locale" target="_blank" rel="external">http://stackoverflow.com/questions/28988441/cant-acess-sonarqube-not-a-valid-locale</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OSX 상에서 SonaQube에 Jeknins를 연동하여 SonaQube 코드품질 측정을 자동으로 하도록 설치하는 과정이다.&lt;br&gt;또한 Tomcat으로 SonarQube를 띄워 서버가 돌아가도록 하는 과정도 포함 하였다.&lt;/p&gt;
&lt;p&gt;설치 순서는
    
    </summary>
    
      <category term="OSX" scheme="https://magicmon.github.io/categories/OSX/"/>
    
    
      <category term="Tomcat" scheme="https://magicmon.github.io/tags/Tomcat/"/>
    
      <category term="Jenkins" scheme="https://magicmon.github.io/tags/Jenkins/"/>
    
      <category term="SonaQube" scheme="https://magicmon.github.io/tags/SonaQube/"/>
    
  </entry>
  
</feed>
